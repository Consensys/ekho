# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Channel {
  id: ID!
  name: String!
  channelKey: String!
  channelmembers: [ChannelMember!]!
}

type ChannelMember {
  id: ID!
  channel: Channel!
  user: User!
  contact: Contact!
  messageChainKey: String!
  nextChannelIdentifier: String!
  users: [ChannelMember!]!
  UserChannelMemberships: [ChannelMember!]!
  ContactChannelMemberships: [ChannelMember!]!
}

type ChannelMessage {
  id: ID!
  channelMember: ChannelMember!
  messageContents: String!
}

type Contact {
  id: ID!
  name: String!
  identifier: String!
  handshakePrivateKey: String!
  handshakePublicKey: String!
  signingKey: String
  oneuseKey: String
  signature: String
  channelmembers: [ChannelMember!]
  user: User!
  contacts: [Contact!]!
}

input ContactHandshakeDto {
  from: String!
  to: String!
  identifier: String!
  oneuseKey: String!
  signingKey: String!
  signature: String!
}

input CreateChannelDto {
  name: String!
}

input CreateExternalChannelDto {
  userId: Float!
}

"""
New user name
"""
input CreateUserDto {
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Message {
  id: Float!
  timestamp: DateTime!
  from: String!
  to: String!
  content: String!
  ipfsPath: String!
  txHash: String!
  channelId: String!
}

type Query {
  Contacts: [Contact!]!
  contactsByUserId(userId: Float!): [Contact!]!
  userById(id: Float!): User!
  userByName(name: String!): User!
  Users: [User!]!
}

input SendMessageDto {
  from: String!
  to: String!
  content: String!
  channelId: String!
}

type User {
  id: ID!
  name: String!
  channelmembers: [ChannelMember!]!
  contacts: [Contact!]
  user: User!
}
